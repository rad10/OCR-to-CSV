#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Dec 18, 2019 12:33:20 PM EST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x450+401+150")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.inputSheet = tk.Button(top)
        self.inputSheet.place(relx=0.033, rely=0.044, height=34, width=157)
        self.inputSheet.configure(activebackground="#ececec")
        self.inputSheet.configure(activeforeground="#000000")
        self.inputSheet.configure(background="#d9d9d9")
        self.inputSheet.configure(disabledforeground="#a3a3a3")
        self.inputSheet.configure(foreground="#000000")
        self.inputSheet.configure(highlightbackground="#d9d9d9")
        self.inputSheet.configure(highlightcolor="black")
        self.inputSheet.configure(pady="0")
        self.inputSheet.configure(text='''Select Signin sheet''')

        self.outputCSV = tk.Button(top)
        self.outputCSV.place(relx=0.033, rely=0.156, height=34, width=157)
        self.outputCSV.configure(activebackground="#ececec")
        self.outputCSV.configure(activeforeground="#000000")
        self.outputCSV.configure(background="#d9d9d9")
        self.outputCSV.configure(disabledforeground="#a3a3a3")
        self.outputCSV.configure(foreground="#000000")
        self.outputCSV.configure(highlightbackground="#d9d9d9")
        self.outputCSV.configure(highlightcolor="black")
        self.outputCSV.configure(pady="0")
        self.outputCSV.configure(text='''Select output csv''')

        self.imagePortrait = tk.Label(top)
        self.imagePortrait.place(relx=0.417, rely=0.022, height=221, width=314)
        self.imagePortrait.configure(activebackground="#f9f9f9")
        self.imagePortrait.configure(activeforeground="black")
        self.imagePortrait.configure(background="#e6e6e6")
        self.imagePortrait.configure(disabledforeground="#a3a3a3")
        self.imagePortrait.configure(foreground="#000000")
        self.imagePortrait.configure(highlightbackground="#d9d9d9")
        self.imagePortrait.configure(highlightcolor="black")
        self.imagePortrait.configure(text='''Label''')

        self.errorLabel = tk.Label(top)
        self.errorLabel.place(relx=0.017, rely=0.267, height=111, width=224)
        self.errorLabel.configure(activebackground="#f9f9f9", activeforeground="black", background="#e1e1e1", disabledforeground="#a3a3a3", foreground="#ff0000", highlightbackground="#d9d9d9", highlightcolor="black")
        self.errorLabel.configure(text='''Uh oh. It looks like we couldnt\ncondifently decide who or what this is.\nWe need you to either confirm our guess\nor type in the correct value''')

        self.correctionEntry = tk.Entry(top)
        self.correctionEntry.place(relx=0.133, rely=0.689, height=30
                , relwidth=0.557)
        self.correctionEntry.configure(background="white",disabledforeground="#a3a3a3",font="TkFixedFont",foreground="#000000",highlightbackground="#d9d9d9",highlightcolor="black",insertbackground="black",selectbackground="#c4c4c4",selectforeground="black")

        self.AIGuess = tk.Button(top)
        self.AIGuess.place(relx=0.55, rely=0.556, height=34, width=227)
        self.AIGuess.configure(activebackground="#ececec",activeforeground="#000000",background="#d9d9d9",disabledforeground="#a3a3a3",foreground="#000000",highlightbackground="#d9d9d9",highlightcolor="black",pady="0")
        self.AIGuess.configure(text='''Button''')

        self.submit = tk.Button(top)
        self.submit.place(relx=0.717, rely=0.689, height=34, width=127)
        self.submit.configure(activebackground="#ececec",activeforeground="#000000",background="#d9d9d9",disabledforeground="#a3a3a3",foreground="#000000",highlightbackground="#d9d9d9",highlightcolor="black",pady="0")
        self.submit.configure(text='''Submit''')

        self.confidenceDescription = tk.Label(top)
        self.confidenceDescription.place(relx=0.267, rely=0.556, height=31
                , width=164)
        self.confidenceDescription.configure(activebackground="#f9f9f9", activeforeground="black",background="#d9d9d9",disabledforeground="#a3a3a3",foreground="#000000",highlightbackground="#d9d9d9",highlightcolor="black")
        self.confidenceDescription.configure(text='''Were not confident, but is it:''')

        self.orLabel = tk.Label(top)
        self.orLabel.place(relx=0.017, rely=0.689, height=31, width=64)
        self.orLabel.configure(activebackground="#f9f9f9",activeforeground="black",background="#d9d9d9",disabledforeground="#a3a3a3",foreground="#000000",highlightbackground="#d9d9d9",highlightcolor="black")
        self.orLabel.configure(text='''Or''')

        self.TranslationProgress = ttk.Progressbar(top)
        self.TranslationProgress.place(relx=0.017, rely=0.911, relwidth=0.95
                , relheight=0.0, height=22)

        self.SheetStatus = tk.Label(top)
        self.SheetStatus.place(relx=0.017, rely=0.844, height=21, width=94)
        self.SheetStatus.configure(activebackground="#f9f9f9",activeforeground="black",background="#d9d9d9",disabledforeground="#a3a3a3",foreground="#000000",highlightbackground="#d9d9d9",highlightcolor="black")
        self.SheetStatus.configure(text='''Sheet: x of y''')

        self.rowStatus = tk.Label(top)
        self.rowStatus.place(relx=0.217, rely=0.844, height=21, width=64)
        self.rowStatus.configure(activebackground="#f9f9f9")
        self.rowStatus.configure(activeforeground="black")
        self.rowStatus.configure(background="#d9d9d9")
        self.rowStatus.configure(disabledforeground="#a3a3a3")
        self.rowStatus.configure(foreground="#000000")
        self.rowStatus.configure(highlightbackground="#d9d9d9")
        self.rowStatus.configure(highlightcolor="black")
        self.rowStatus.configure(text='''Row: x of y''')

if __name__ == '__main__':
    vp_start_gui()





